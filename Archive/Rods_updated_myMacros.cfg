
#####################################################################
[gcode_macro G32]
#####################################################################

gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    
    ;G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum/2} Z30} F12000

#####################################################################
;[gcode_macro M141] ; chamber exhaust fan
#####################################################################

;gcode:
;    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}

######################################################################
[gcode_macro PRINT_START] ; Incorporate nozzle clean and QGL
#####################################################################

gcode:
    {% set bed = params.BED|int %} 					    ; slicer argument
	{% set extruder = params.EXTRUDER|int %}	        ; slicer argument
	{% set chamber = params.CHAMBER|default(0)|int %}	; slicer argument
	
	G90								; always set absolute mode by default to avoid positioning errors for poorly sliced stl's 
	M104 S{extruder * 0.70}    		; start preheat of extruder (knock it back to prevent oozing) while we wait for the bed to heat up
	M117 Heating bed
	M140 S{bed}                 	; set and wait for bed to target temperature
	M106 S0                     	; set part fan speed to zero
#	BED_MESH_CLEAR					; clear bed mesh
	M117 Homing & QGL
	CG28                        	; conditional home
	QUAD_GANTRY_LEVEL	        	; QGL
    G28 Z                       	; re-home Z
#   	M117 Bed mesh
#    BED_MESH_CALIBRATE				; create fresh mesh
   	M117 Heating extruder
	M109 S{extruder}            	; set and wait for the extruder to reach target temperature
#	CLEAN_NOZZLE WIPEONLY=1			; wipe hot nozzle before auto-Z
#	CALIBRATE_Z                 	; auto-Z calibration - do not home Z after this
	CLEAN_NOZZLE                	; clean & purge nozzle before printing
	M117 Printing ...
	UPDATE_DELAYED_GCODE ID=_CLEARLCD DURATION=4
#	SET_FILAMENT_SENSOR SENSOR=myBTT ENABLE=1 ; enable the filament sensor
 	PARKBED                     	; centre extruder/hotend low on bed before starting to prevent highspeed low pass of bed to starting point

#####################################################################
[gcode_macro PRINT_END]
#####################################################################

; Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
#    BED_MESH_CLEAR
	#	SET_FILAMENT_SENSOR SENSOR=myBTT ENABLE=0 ; disable the filament sensor (so we dont trigger issues when changing filament)
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

#####################################################################
[delayed_gcode _CLEARLCD] 
; tidy up and clear LCD display message line after n-seconds
; use: insert after M117 - UPDATE_DELAYED_GCODE ID=_CLEARLCD DURATION=4
#####################################################################

gcode:
  M117

#####################################################################
[gcode_macro BEEP]; Beep multiple with BEEP beeps==3
#####################################################################
gcode:
	# Parameters
	{% set beeps = params.BEEPS|default(1)|int %}
	{% set beepms = params.BEEPMS|default(1)|int %}
	{% set waitms = params.WAITPMS|default(1)|int %}
	
    {% for beep in range(beeps|int) %}
        SET_PIN PIN=beeper VALUE=0.8
        G4 P{beepms}
        SET_PIN PIN=beeper VALUE=0
		G4 P{waitms}
    {% endfor %}


#####################################################################
[gcode_macro CG28] ; conditional home of XYZ
#####################################################################

gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
		G28
	{% endif %}

#####################################################################
[gcode_macro _PURGE_LINE] ; fat purge line to left of bed
#####################################################################

gcode:
    G92 E0                        ; zero/reset extruder
    G1 X0 Y0 Z7 F{printer.configfile.settings.printer.max_velocity*40} ; move to start position at safe Z
    G1 Z0.3						  ; get close	

    G1 E+5 F100                   ; extrude to put the pressure (-20 from purge macro)
    G92 E0

    G1 X0 Y100 Z0.3 F500 E20      ; extrude fat line
    G92 E0                        ; zero/reset extruder
    G1 Z2 E-0.1 F3000             ; lift nozzle & retract a little
    G92 E0                        ; zero/reset extruder

#####################################################################
[gcode_macro _LOWERCURRENT] ; lower Z stepper current when calibrating
#####################################################################

gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.45 HOLDCURRENT=0.45
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.45 HOLDCURRENT=0.45
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.45 HOLDCURRENT=0.45
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.45 HOLDCURRENT=0.45
	
#####################################################################
[gcode_macro _RESETCURRENT] ; restore Z stepp currents afterwards
#####################################################################

gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}	

#####################################################################
[gcode_macro _UNLOAD_FILAMENT]
#####################################################################

gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                     ; set extruder to relative
	G1 E10 F600                             ; extrude a little to soften tip 
	G1 E-100 F1800                          ; retract filament completely
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

#####################################################################
[gcode_macro _LOAD_FILAMENT]
#####################################################################

gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83                                     ; set extruder to relative
	G1 E90 F500
    G1 E-1.0 F3600                			; retract a little
	RESTORE_GCODE_STATE NAME=LOADFILAMENT

#####################################################################
[gcode_macro HOT_UNLOAD]
#####################################################################

gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    _UNLOAD_FILAMENT

#####################################################################
[gcode_macro HOT_LOAD]
#####################################################################

gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    _LOAD_FILAMENT

#####################################################################
[gcode_macro PARKFRONT] ; Park front centre
#####################################################################

gcode:
	CG28                                  	; conditional home
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   	; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+20} Z{printer.toolhead.axis_maximum.z/2} F{printer.configfile.settings.printer.max_velocity*40}		
	RESTORE_GCODE_STATE NAME=PARKFRONT

#####################################################################
[gcode_macro PARKFRONTLOW] ; Park front centre, but low down
#####################################################################

gcode:
	CG28                                  	; conditional home
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   	; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+20} Z15 F{printer.configfile.settings.printer.max_velocity*40}										
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
#####################################################################
[gcode_macro PARKREAR] ; # Park top rear right
#####################################################################

gcode:
	CG28                          		    ; conditional home
	SAVE_GCODE_STATE NAME=PARKREAR
	G90                                     ; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-100} F{printer.configfile.settings.printer.max_velocity*40}		
	RESTORE_GCODE_STATE NAME=PARKREAR

#####################################################################
[gcode_macro PARKCENTRE] ; Park center of build volume
#####################################################################

gcode:
	CG28                                  ; conditional home
	SAVE_GCODE_STATE NAME=PARKCENTRE
	G90                                   ; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F{printer.configfile.settings.printer.max_velocity*40}	
	RESTORE_GCODE_STATE NAME=PARKCENTRE
	
#####################################################################
[gcode_macro PARKBED] ; Park 15mm above centre of bed
#####################################################################

gcode:
	CG28                           		; conditional home
	SAVE_GCODE_STATE NAME=PARKBED
	G90                                 ; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F{printer.configfile.settings.printer.max_velocity*40}										
	RESTORE_GCODE_STATE NAME=PARKBED

#####################################################################
[gcode_macro M900]
#####################################################################

; Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
; Used in conjunction with Marlin's linear advance calibration tool: 
; https://marlinfw.org/tools/lin_advance/k-factor.html

gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}

#####################################################################
[gcode_macro TEST_SPEED]
#####################################################################

; Home, get position, throw around toolhead, home again.
; If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
; We only measure to a full step to accomodate for endstop variance.
; Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding box (in case the machine min/maxes are not perfect)
	{% set bound = params.BOUND|default(20)|int %}
	
	# Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Absolute positioning
	G90
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

	{% for i in range(iterations) %}
		# Diagonals
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		
		# Box
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home XY and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED
